#!/bin/bash
set -euo pipefail
# clair-add-alias: Add a new alias to the collective consciousness

# Get the directory of this script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Source the helper functions
source "$SCRIPT_DIR/clair-de-config" || {
    echo "Error: clair-de-config not properly installed. Run install.sh first."
    exit 1
}

# Enable error handling
set_error_trap

# Show usage
usage() {
    echo "Usage: clair-add-alias <name> <command>"
    echo "       clair-add-alias -e|--edit"
    echo ""
    echo "Add a new alias to your synchronized configuration"
    echo ""
    echo "Options:"
    echo "  -e, --edit     Open aliases file in your editor"
    echo "  -h, --help     Show this help message"
    echo ""
    echo "Examples:"
    echo "  clair-add-alias ll 'ls -la'"
    echo "  clair-add-alias gs 'git status'"
    echo "  clair-add-alias --edit"
}

# Parse arguments
if [[ $# -eq 0 ]]; then
    usage
    exit 1
fi

case $1 in
    -h|--help)
        usage
        exit 0
        ;;
    -e|--edit)
        # Open in editor
        EDITOR="${EDITOR:-vi}"
        # Validate editor command
        if ! command -v "$EDITOR" >/dev/null 2>&1; then
            _clair_say error "Editor not found: $EDITOR"
            exit 1
        fi
        _clair_say info "Opening aliases file in $EDITOR..."
        "$EDITOR" "$CLAIR_CONFIG_HOME/aliases"
        _clair_say info "Don't forget to run 'clair-sync --push' to share your changes!"
        exit 0
        ;;
esac

# Require exactly 2 arguments for adding an alias
if [[ $# -ne 2 ]]; then
    _clair_say error "Expected exactly 2 arguments: name and command"
    echo ""
    usage
    exit 1
fi

ALIAS_NAME="$1"
ALIAS_COMMAND="$2"

# Validate alias name using security library
if ! validate_alias_name "$ALIAS_NAME"; then
    _clair_say error "Invalid alias name: $ALIAS_NAME"
    _clair_say info "Alias names must start with a letter or underscore and contain only letters, numbers, and underscores"
    _clair_say info "Reserved words are not allowed"
    exit 1
fi

# Escape the alias command
ALIAS_COMMAND=$(escape_alias_command "$ALIAS_COMMAND")

# Acquire lock for alias modification
acquire_lock
CLAIR_LOCK_ACQUIRED=true

# Check if alias already exists
if grep -q "^alias $ALIAS_NAME=" "$CLAIR_CONFIG_HOME/aliases" 2>/dev/null; then
    _clair_say warn "Alias '$ALIAS_NAME' already exists:"
    grep "^alias $ALIAS_NAME=" "$CLAIR_CONFIG_HOME/aliases"
    echo ""
    read -p "Overwrite? [y/N] " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        _clair_say info "Cancelled"
        exit 0
    fi
    # Remove the old alias atomically
    local content
    content=$(grep -v "^alias $ALIAS_NAME=" "$CLAIR_CONFIG_HOME/aliases")
    atomic_write "$CLAIR_CONFIG_HOME/aliases" "$content"
fi

# Add the new alias atomically
_clair_say info "Adding alias: $ALIAS_NAME='$ALIAS_COMMAND'"
local current_content
if [[ -f "$CLAIR_CONFIG_HOME/aliases" ]]; then
    current_content=$(cat "$CLAIR_CONFIG_HOME/aliases")
    # Ensure newline at end if not present
    [[ -n "$current_content" && "${current_content: -1}" != $'\n' ]] && current_content+=$'\n'
else
    current_content=""
fi
current_content+="alias $ALIAS_NAME='$ALIAS_COMMAND'"
atomic_write "$CLAIR_CONFIG_HOME/aliases" "$current_content"

# Reload aliases in current shell
source "$CLAIR_CONFIG_HOME/aliases" || _clair_say warn "Failed to reload aliases in current shell"

_clair_say success "Alias added successfully!"
_clair_say info "The alias is now available in your current shell"
_clair_say info "Run 'clair-sync --push -m \"Add $ALIAS_NAME alias\"' to share this alias"

# Show the new alias in action
echo ""
_clair_say info "Test your new alias:"
echo "  $ $ALIAS_NAME"